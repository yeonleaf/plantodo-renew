name: CD using Github Actions and Docker

on:
  push:
    branches:
      - 'main'
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      -  
        name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACTION_TOKEN }}
      -
        name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      -
        name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1.1
      -
        name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: plantodo
      -
        name: list Contents of src/main/resources (Before build)
        run: ls -la ./plantodo/src/main/resources
      - 
        name: Build with Gradle
        run: gradle clean build -x test
        working-directory: plantodo
      -
        name: list Contents of src/main/resources (After build)
        run: ls -la ./plantodo/src/main/resources
      # -
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      # -
      #   name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - 
      #   name: Login to Docker hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Build and push Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/ptd:latest
      #     secrets: |
      #       GIT_AUTH_TOKEN=${{ secrets.ACTION_TOKEN }}
      # -
      #   name: EC2 Docker run
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ubuntu
      #     key: ${{ secrets.EC2_KEY }}
      #     script: |
      #       docker rm -f $(docker ps -qa)
      #       docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/ptd:latest
      #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ptd:latest
      #       docker-compose up -d
