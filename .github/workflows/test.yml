name: test removing flyway and docker-compose (docker image build)

on:
  push:
    branches:
      - 'delflyway'
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      -  
        name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACTION_TOKEN }}
      -
        name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      -
        name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1.1
      -
        name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: plantodo
      - 
        name: Build with Gradle
        run: gradle clean build
        working-directory: plantodo
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - 
      #   name: Build and push Docker image
      #   run: |
      #     docker build -t ptd .
      #     docker tag ptd yeonleaf/ptd:dev-test
      #     docker push yeonleaf/ptd:dev-test
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ptd
          IMAGE_TAG: dev
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
